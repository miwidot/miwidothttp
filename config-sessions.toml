# Session Management Configuration

[server]
http_port = 8080
https_port = 8443

# ============================================
# SESSION CONFIGURATION
# ============================================

[session]
# Storage backend: "memory", "redis", "file"
storage = "redis"

# Redis configuration (if storage = "redis")
redis_url = "redis://localhost:6379/0"
redis_prefix = "session"

# File storage configuration (if storage = "file")
file_path = "/var/lib/miwidothttp/sessions"

# Cookie settings
cookie_name = "MIWISESSID"
cookie_domain = ".example.com"  # Share across subdomains
cookie_path = "/"
cookie_secure = true            # HTTPS only
cookie_http_only = true         # No JavaScript access
cookie_same_site = "lax"        # CSRF protection

# Session lifetime
ttl_seconds = 3600              # 1 hour
cleanup_interval_seconds = 300  # 5 minutes

# Security settings
regenerate_id_on_login = true   # Prevent session fixation
max_sessions_per_user = 5       # Limit concurrent sessions
check_ip = false                # Bind session to IP
check_user_agent = true         # Bind session to User-Agent

# ============================================
# VIRTUAL HOST WITH SESSION SUPPORT
# ============================================

# E-commerce site with shopping cart sessions
[[vhosts]]
domains = ["shop.example.com"]
priority = 100

[vhosts.session]
enabled = true
storage = "redis"  # Override default
ttl_seconds = 7200  # 2 hours for shopping

[vhosts.session.features]
shopping_cart = true
recently_viewed = true
wishlist = true
compare_products = true

# Admin panel with strict session security
[[vhosts]]
domains = ["admin.example.com"]
priority = 100

[vhosts.session]
enabled = true
storage = "redis"
ttl_seconds = 1800  # 30 minutes
check_ip = true     # Strict IP binding
check_user_agent = true
max_sessions_per_user = 1  # Single session only

[vhosts.session.security]
require_2fa = true
idle_timeout = 300  # 5 minute idle timeout
absolute_timeout = 3600  # 1 hour max

# API with token-based sessions
[[vhosts]]
domains = ["api.example.com"]
priority = 100

[vhosts.session]
enabled = true
storage = "memory"  # Fast for API tokens
ttl_seconds = 900   # 15 minutes

[vhosts.session.api]
jwt_support = true
refresh_tokens = true
rate_limit_by_session = true

# ============================================
# SESSION STORAGE EXAMPLES
# ============================================

# Memory storage (fastest, not distributed)
[session_stores.memory]
type = "memory"
max_sessions = 100000
eviction_policy = "lru"  # Least Recently Used

# Redis storage (distributed, persistent)
[session_stores.redis]
type = "redis"
url = "redis://localhost:6379/0"
prefix = "sess"
pool_size = 10
timeout = 5
# Redis Cluster support
cluster_nodes = [
    "redis://node1:6379",
    "redis://node2:6379",
    "redis://node3:6379"
]

# File storage (persistent, not distributed)
[session_stores.file]
type = "file"
path = "/var/lib/sessions"
cleanup_interval = 3600
max_files = 1000000

# ============================================
# SESSION-BASED FEATURES
# ============================================

# Rate limiting per session
[rate_limiting]
enabled = true
per_session = true
requests_per_minute = 60
burst_size = 10

# A/B testing with sessions
[ab_testing]
enabled = true
store_variant_in_session = true
experiments = [
    { name = "homepage_v2", percentage = 50 },
    { name = "checkout_flow", percentage = 30 }
]

# Geolocation tracking
[geolocation]
enabled = true
store_in_session = true
update_interval = 86400  # Daily

# ============================================
# CSRF PROTECTION
# ============================================

[csrf]
enabled = true
token_name = "csrf_token"
header_name = "X-CSRF-Token"
form_field = "_csrf"
exclude_paths = [
    "/api/webhook",
    "/api/public"
]

# ============================================
# SESSION ANALYTICS
# ============================================

[analytics]
enabled = true
track_page_views = true
track_events = true
track_performance = true

[analytics.export]
type = "prometheus"
endpoint = "/metrics"
include_session_metrics = true

# ============================================
# DISTRIBUTED SESSION EXAMPLES
# ============================================

# Sticky sessions with consistent hashing
[load_balancing]
strategy = "consistent_hash"
hash_key = "session_id"
replicas = 150

# Session replication
[replication]
enabled = true
mode = "async"  # or "sync"
replicas = 2
write_concern = "majority"

# ============================================
# SESSION SECURITY POLICIES
# ============================================

[security_policies]

# Suspicious activity detection
[security_policies.suspicious]
max_failed_logins = 5
lockout_duration = 900  # 15 minutes
concurrent_session_limit = 10
geographic_anomaly_detection = true

# Session hijacking prevention
[security_policies.hijacking]
fingerprint_checks = [
    "user_agent",
    "accept_language",
    "accept_encoding",
    "screen_resolution"  # Via JavaScript
]
require_reverification = true
reverification_interval = 3600

# ============================================
# SESSION EVENT HANDLERS
# ============================================

[events]
on_create = "/webhooks/session/created"
on_destroy = "/webhooks/session/destroyed"
on_login = "/webhooks/session/login"
on_logout = "/webhooks/session/logout"
on_expire = "/webhooks/session/expired"

# ============================================
# EXAMPLE SESSION DATA STRUCTURE
# ============================================

# Shopping cart session
# {
#   "id": "a3f5d8c9b2e1f4a7d6c3b9e8f5a2d1c4",
#   "user_id": "user_123",
#   "created_at": "2025-08-09T10:00:00Z",
#   "data": {
#     "cart": {
#       "items": [
#         {"product_id": "ABC123", "quantity": 2, "price": 29.99},
#         {"product_id": "XYZ789", "quantity": 1, "price": 49.99}
#       ],
#       "total": 109.97,
#       "currency": "USD"
#     },
#     "preferences": {
#       "language": "en",
#       "currency": "USD",
#       "theme": "dark"
#     },
#     "analytics": {
#       "utm_source": "google",
#       "utm_campaign": "summer_sale",
#       "landing_page": "/products/shoes"
#     }
#   }
# }