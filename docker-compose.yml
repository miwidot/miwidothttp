version: '3.8'

services:
  miwidothttp:
    build: .
    container_name: miwidothttp
    ports:
      - "8080:8080"
      - "8443:8443"
    volumes:
      - ./config.toml:/etc/miwidothttp/config.toml:ro
      - ./static:/app/static:ro
      - ./certs:/app/certs:ro
      - logs:/var/log/miwidothttp
    environment:
      - RUST_LOG=info
    restart: unless-stopped
    networks:
      - web
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s

  # Optional: Redis for session storage
  redis:
    image: redis:7-alpine
    container_name: miwidothttp-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - web
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Optional: Example Node.js backend
  node-app:
    image: node:20-alpine
    container_name: miwidothttp-node-app
    working_dir: /app
    volumes:
      - ./apps/node-app:/app
    command: npm start
    networks:
      - web
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3000

networks:
  web:
    driver: bridge

volumes:
  logs:
  redis-data: