user nginx;
worker_processes auto;
worker_cpu_affinity auto;
worker_rlimit_nofile 65536;
error_log /dev/null;
pid /var/run/nginx.pid;

events {
    worker_connections 10000;
    use epoll;
    multi_accept on;
    accept_mutex off;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging disabled for performance
    access_log off;
    error_log /dev/null;

    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 75;
    keepalive_requests 1000;
    reset_timedout_connection on;
    client_body_timeout 10;
    client_header_timeout 10;
    send_timeout 10;
    
    # Buffer settings
    client_body_buffer_size 128k;
    client_max_body_size 10m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 16k;
    output_buffers 32 32k;
    postpone_output 1460;
    
    # File cache settings
    open_file_cache max=10000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;
    
    # Gzip disabled for raw throughput
    gzip off;
    
    # Server configuration
    server {
        listen 80 default_server reuseport backlog=4096;
        server_name _;
        root /var/www/html;
        
        location / {
            try_files $uri $uri/ =404;
            
            # Disable all unnecessary features
            if_modified_since off;
            etag off;
            
            # Static file serving optimizations
            sendfile on;
            sendfile_max_chunk 1m;
            tcp_nopush on;
            tcp_nodelay on;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Metrics endpoint (stub)
        location /metrics {
            access_log off;
            return 200 "# nginx metrics\n";
            add_header Content-Type text/plain;
        }
    }
}